#load "core/std"
#load "./../src/module"

use package core
onyx_net :: package onyx_net

octets_to_addr :: (a, b, c, d: u8) -> u32 {
    return (cast(u32) a << 24) |
           (cast(u32) b << 16) |
           (cast(u32) c << 8)  |
           (cast(u32) d << 0);
}

main :: (args) => {
    //
    // 'null' signifies that this host should not bind a socket
    // to a port. Only 1 peer is needed, as this is only connecting
    // to one server.
    host: ^onyx_net.Host;
    if host', err := onyx_net.host_create(null, 1); err != .None {
        println(err);
    }

    addr: net.Socket_Address;
    addr.addr = octets_to_addr(127, 0, 0, 1);
    addr.port = 8080;
    peer := onyx_net.host_connect(host, ^addr, 2);

    input_thread: thread.Thread;
    thread.spawn(^input_thread, peer, (peer) => {
        input_reader := io.reader_make(^stdin);

        while true {
            line := io.read_line(^input_reader) |> string.strip_whitespace();
            
            switch line {
                case "disconnect" {
                    println("Disconnecting");
                    onyx_net.peer_send_disconnect(peer);
                    onyx_net.peer_flush_outgoing_commands(peer);
                    onyx_net.peer_disconnect(peer);
                    break;
                }

                case "send" {
                    packet := new(onyx_net.Packet);
                    packet.flags |= .Reliable;
                    packet.data = "What's Up?";
                    println("Sending what's up...");

                    onyx_net.peer_send(peer, 0, packet);
                }
            }
        }
    });

    while true {
        for host->get_events(timeout=100) {
            // printf("{*}\n", it);

            if it.type == .Connection {
                println("Successfully connected to server!");
            }

            if it.type == .Disconnection {
                println("Lost connection to server.");
                break break;
            }

            if it.type == .Message {
                print("Server says: ");
                print(it.data);
                print("\n");
            }

            // if it.type == .Message {
            //     packet := new(onyx_net.Packet);
            //     packet.flags |= .Reliable;
            //     packet.data = "HELLO";

            //     onyx_net.peer_send(it.peer, 0, packet);
            // }
        }

        // if random.between(0, 3) == 0 {
        //     packet := new(onyx_net.Packet);
        //     packet.flags |= .Reliable;
        //     packet.data = "What's Up?";
        //     println("Sending what's up...");

        //     onyx_net.peer_send(peer, 0, packet);
        // }

        // if random.between(0, 100) == 4 {
        //     println("Disconnecting");
        //     onyx_net.peer_send_disconnect(peer);
        //     onyx_net.peer_flush_outgoing_commands(peer);
        //     onyx_net.peer_disconnect(peer);
        //     break;
        // }
    }
}
