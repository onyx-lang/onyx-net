#load "core/std"
#load "./../src/module"

use package core
onyx_net :: package onyx_net


main :: (args) => {
    addr: net.Socket_Address;
    addr.port = 8080;

    server, err := onyx_net.host_create(^addr, 32);
    if err != .None {
        println(err);
        return;
    }

    while true {
        for server->get_events(timeout = 2000) {
            // printf("{*}\n", it);

            if it.type == .Connection {
                printf("New connection from: {}\n", it.peer.addr);
                packet := new(onyx_net.Packet);
                packet.flags |= .Reliable;
                packet.data = "Welcome!!!";

                onyx_net.host_broadcast(server, 0, packet);
            }

            if it.type == .Disconnection {
                printf("Disconnection: {}\n", it.peer.addr);
            }

            if it.type == .Message {
                if it.data == "What's Up?" {
                    packet := new(onyx_net.Packet);
                    packet.flags |= .Reliable;
                    packet.data = #file_contents "./../src/host.onyx";

                    onyx_net.peer_send(it.peer, 0, packet);
                }
            }
        }
    }
}
